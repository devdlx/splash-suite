{"version":3,"sources":["splash-video.es6"],"names":[],"mappings":"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","file":"splash-video.js","sourcesContent":["(function() {\n    'use strict';\n\n    // #CleanTitle\n\n\n    let YEAR_REGEX = /(19|20)\\d{2}/g;\n    let CD_NUMBER_REGEX = /cd(\\s?)[1-9]/gi;\n    let SEASON_REGEX = /s(\\d{1,2})/i;\n    let EPISODE_REGEX = /e(\\d{1,2})/i;\n\n    let cleanupTitle = (title) => {\n        // Cleanup Movie Title\n        var cleanTitle = title;\n        cleanTitle = stripIllegalCharacters(cleanTitle, ' ');\n        cleanTitle = cleanTitle.replace(/\\bx264|\\baac|\\bbluray|\\bdvd|\\bhdtv|\\b720p|\\b1080p|\\b1080i|\\b480p|\\bWEB-DL|\\bmp4|\\bmp3|\\bogg|\\bWEB|DL|UNCENSORED|m3u8|mkv/gi, '');\n        cleanTitle = removeYearFromTitle(cleanTitle);\n        cleanTitle = removeReleaseGroupNamesFromTitle(cleanTitle);\n        cleanTitle = removeMovieTypeFromTitle(cleanTitle);\n        cleanTitle = removeAudioTypesFromTitle(cleanTitle);\n        cleanTitle = removeCountryNamesFromTitle(cleanTitle);\n        cleanTitle = removeCdNumberFromTitle(cleanTitle).trim();\n        // Extract CD-Number from Title\n        var hasCdinTitle = title.match(CD_NUMBER_REGEX);\n        var cd_number = hasCdinTitle ? hasCdinTitle.toString() : '';\n        // Extract Year from Title\n        var year = title.match(YEAR_REGEX);\n        year = year ? year.toString() : '';\n        // Extract Season from Title\n        let season = cleanTitle.match(SEASON_REGEX);\n        cleanTitle = cleanTitle.replace(SEASON_REGEX, '');\n        // Extract Season from Title\n        let episode = cleanTitle.match(EPISODE_REGEX);\n        cleanTitle = cleanTitle.replace(EPISODE_REGEX, '');\n        let media = {};\n        media.title = cleanTitle;\n        media.year = year;\n        media.season = season | '';\n        media.episode = episode | '';\n        media.type = season ? 'tv' : 'movie'\n        return media;\n    }\n    let stripIllegalCharacters = (movieTitle, replacementString) => {\n        return movieTitle.replace(/\\.|_|\\/|\\+|\\-/g, replacementString);\n    }\n    let removeYearFromTitle = (movieTitle) => {\n        return movieTitle.replace(YEAR_REGEX, \"\").replace(/\\(|\\)/g, '');\n    }\n    let removeReleaseGroupNamesFromTitle = (movieTitle) => {\n        return movieTitle.replace(/FxM|aAF|arc|AAC|MLR|AFO|TBFA|WB|JYK|ARAXIAL|UNiVERSAL|ETRG|ToZoon|PFa|SiRiUS|Rets|BestDivX|DIMENSION|CTU|ORENJI|LOL|juggs|NeDiVx|ESPiSE|MiLLENiUM|iMMORTALS|QiM|QuidaM|COCAiN|DOMiNO|JBW|LRC|WPi|NTi|SiNK|HLS|HNR|iKA|LPD|DMT|DvF|IMBT|LMG|DiAMOND|DoNE|D0PE|NEPTUNE|TC|SAPHiRE|PUKKA|FiCO|PAL|aXXo|VoMiT|ViTE|ALLiANCE|mVs|XanaX|FLAiTE|PREVAiL|CAMERA|VH-PROD|BrG|replica|FZERO|YIFY|MarGe|T4P3|MIRCrew|BOKUTOX|NAHOM|BLUWORLD|C0P|TRL|Ozlem|ShAaNiG|800MB|CRiMSON/ig, \"\");\n    }\n    let removeMovieTypeFromTitle = (movieTitle) => {\n        return movieTitle.replace(/dvdrip|multi9|xxx|x264|x265|AC3|web|hdtv|vhs|HC|embeded|embedded|ac3|dd5 1|m sub|x264|dvd5|dvd9|multi sub|non|h264|x264| sub|subs|ntsc|ingebakken|torrent|torrentz|bluray|brrip|sample|xvid|cam|camrip|wp|workprint|telecine|ppv|ppvrip|scr|screener|dvdscr|bdscr|ddc|R5|telesync|pdvd|1080p|BDRIP|hq|sd|720p|hdrip/gi, \"\");\n    }\n    let removeAudioTypesFromTitle = (movieTitle) => {\n        return movieTitle.replace(/320kbps|192kbps|128kbps|mp3|320|192|128/gi, \"\");\n    }\n    let removeCountryNamesFromTitle = (movieTitle) => {\n        return movieTitle.replace(/\\b(NL|SWE|SWESUB|ENG|JAP|BRAZIL|TURKIC|slavic|SLK|ITA|HEBREW|HEB|ESP|RUS|DE|german|french|FR|ESPA|dansk|HUN|iTALiAN|JPN|[Ii]ta|[Ee]ng)\\b/g, \"\");\n    }\n    let removeCdNumberFromTitle = (movieTitle) => {\n        return movieTitle.replace(CD_NUMBER_REGEX, \"\");\n    }\n\n\n    // #CORS\n\n    let responseListener = (details) => {\n        var flag = false,\n            rule = {\n                \"name\": \"Access-Control-Allow-Origin\",\n                \"value\": \"*\"\n            };\n\n        for (var i = 0; i < details.responseHeaders.length; ++i) {\n            if (details.responseHeaders[i].name.toLowerCase() === rule.name.toLowerCase()) {\n                flag = true;\n                details.responseHeaders[i].value = rule.value;\n                break;\n            }\n        }\n        if (!flag) details.responseHeaders.push(rule);\n\n        if (accessControlRequestHeaders) {\n\n            details.responseHeaders.push({\n                \"name\": \"Access-Control-Allow-Headers\",\n                \"value\": accessControlRequestHeaders\n            });\n\n        }\n\n        if (exposedHeaders) {\n            details.responseHeaders.push({\n                \"name\": \"Access-Control-Expose-Headers\",\n                \"value\": exposedHeaders\n            });\n        }\n\n        details.responseHeaders.push({\n            \"name\": \"Access-Control-Allow-Methods\",\n            \"value\": \"GET, PUT, POST, DELETE, HEAD, OPTIONS\"\n        });\n\n        return {\n            responseHeaders: details.responseHeaders\n        };\n\n    }\n\n\n    let requestListener = (details) => {\n        var flag = false,\n            rule = {\n                name: \"Origin\",\n                value: \"http://evil.com/\"\n            };\n        var i;\n\n        for (i = 0; i < details.requestHeaders.length; ++i) {\n            if (details.requestHeaders[i].name.toLowerCase() === rule.name.toLowerCase()) {\n                flag = true;\n                details.requestHeaders[i].value = rule.value;\n                break;\n            }\n        }\n        if (!flag) details.requestHeaders.push(rule);\n\n        for (i = 0; i < details.requestHeaders.length; ++i) {\n            if (details.requestHeaders[i].name.toLowerCase() === \"access-control-request-headers\") {\n                accessControlRequestHeaders = details.requestHeaders[i].value\n            }\n        }\n\n        return {\n            requestHeaders: details.requestHeaders\n        };\n    }\n\n\n\n\n    // #scripts\n\n    // let scripts = [\n    //     '//cdn.jsdelivr.net/webtorrent/latest/webtorrent.min.js',\n    //     '//www.gstatic.com/cast/sdk/libs/mediaplayer/1.0.0/media_player.js',\n    //     '//cdn.jsdelivr.net/hls.js/latest/hls.min.js'\n    // ];\n    // for (var i = 0; i < scripts.length; i++) {\n    //     var _s = document.createElement('script');\n    //     _s.src = scripts[i];\n    //     document.body.appendChild(_s);\n    // }\n\n\n\n    // #dlxvideo\n    let MyBehavior = {};\n    let client = null;\n\n\n    class dlxVideo {\n\n        // Define behaviors with a getter.\n        // get behaviors() {\n        //     return [MyBehavior];\n        // }\n\n        // Element setup goes in beforeRegister instead of createdCallback.\n        beforeRegister() {\n            this.is = 'splash-video';\n            // Define the properties object in beforeRegister.\n            this.properties = {\n                loading: {\n                    type: Boolean,\n                    value: true\n                },\n\n                durationTick: {\n                    type: String,\n                    notify: true,\n                    value: '00:00'\n                },\n                currentTick: {\n                    type: String,\n                    notify: true,\n                    value: '00:00'\n                },\n                duration: {\n                    type: Number,\n                    notify: true,\n                    value: 0\n                },\n                currentTime: {\n                    type: Number,\n                    notify: true,\n                    value: 0\n                },\n\n\n\n                item: {\n                    type: Object,\n                    notify: true,\n                    value: {}\n                },\n\n\n                controls: {\n                    type: Boolean,\n                    value: true\n                },\n\n\n\n\n\n                autoplay: {\n                    type: Boolean,\n                    value: false\n                },\n                loop: {\n                    type: Boolean,\n                    value: false\n                },\n                preload: {\n                    type: Boolean,\n                    value: false\n                },\n                muted: {\n                    type: Boolean,\n                    value: false\n                },\n                playPauseIcon: {\n                    value: 'av:play-arrow'\n                },\n                videoVolume: {\n                    value: 100\n                },\n                volumeIcon: {\n                    type: String,\n                    value: 'av:volume-up'\n                },\n                videoTimeline: {\n                    type: Number\n                },\n\n\n                link: {\n                    type: String,\n                    notify: true,\n                    //value: 'magnet:?xt=urn:btih:5fb2eb4a22389fcf87346dff1d88c8fe813b26ad&dn=South.Park.S18E09.REHASH.UNCENSORED.720p.WEB-DL.x264.AAC.mp4&tr=udp%3A%2F%2Fexodus.desync.com%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.internetwarriors.net%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&tr=wss%3A%2F%2Ftracker.webtorrent.io'\n                    //value: 'magnet:?xt=urn:btih:202effd79e2ec2b40b872c1b401d9dd47cbef5f0&dn=007+James+Bond+Quantum+of+Solace+2008+720p+BluRay+x264+AAC+-+Ozlem.mp4&tr=udp%3A%2F%2Fexodus.desync.com%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.internetwarriors.net%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&tr=wss%3A%2F%2Ftracker.webtorrent.io'\n                    //value: 'https://www.youtube.com/watch?v=pwKKDgiLVkw'\n                    //value: 'https://youtu.be/1IkTFHCUYLA?t=120'\n                },\n\n                youtube: {\n                    type: String,\n                    notify: true\n\n                },\n\n                entered: {\n                    type: Boolean,\n                    value: false,\n                    observer: '_enteredChange'\n                }\n\n            };\n\n            this.listeners = {\n                'canplay': '_canplay',\n                'timeupdate': '_timeupdate'\n            };\n\n            this.observers = [\n                '_link(link)',\n                '_youtubeTimeupdate(currentTime, youtubeId)',\n                '_youtubeId(youtube)'\n            ];\n        }\n\n        // #ready\n        ready() {\n            // console.log('player ready');\n\n        }\n\n        attached() {}\n        detached() {}\n        attributeChanged() {}\n\n        /* Public Methods */\n        /**\n         * Cleans up the specified title\n         * @param title            The title to clean\n         * @returns {{title: string, year: string, cd: string}}\n         */\n        _canplay(event) {\n            //console.log(event);\n            let video = this.$.videoPlayer;\n            this.set('currentTick', this.readableDuration(video.currentTime));\n            this.set('durationTick', this.readableDuration(video.duration));\n        }\n        _youtubeTimeupdate(currentTime) {\n            // this.set('currentTime', this.$.yt.currentTime);\n            this.set('duration', this.$.yt.duration);\n            this.set('videoTimeline', (currentTime / this.duration) * 100);\n            // console.log(this.videoTimeline);\n        }\n        _timeupdate(event) {\n            //console.log(event.timeStamp );\n            let video = this.$.videoPlayer;\n            if (video.paused || video.ended)\n                this.set('playPauseIcon', 'av:play-arrow');\n            else\n                this.set('playPauseIcon', 'av:pause');\n\n            this.set('currentTick', this.readableDuration(video.currentTime));\n            this.set('durationTick', this.readableDuration(video.duration));\n            // Setting the video parameters to the component\n            this.set('duration', video.duration);\n            this.set('currentTime', video.currentTime);\n            //console.log((video.currentTime / video.duration)*100);\n            this.set('videoTimeline', (video.currentTime / video.duration) * 100);\n        }\n        setTimelineFrame(event) {\n            // console.log('setTimelineFrame');\n            if (this.youtubeId) {\n                console.log((event.target.value/100)*this.$.yt.duration);\n                // this.set('videoTimeline', ((event.target.value/100) / this.duration) * 100);\n                this.$.yt.seekTo((event.target.value/100)*this.$.yt.duration);\n            } else {\n                let video = this.$.videoPlayer;\n                //console.log(video);\n                video.currentTime = Math.floor(video.duration * event.target.getAttribute('value') / 100);\n            }\n        }\n        _changeVolume(event) {\n            if (this.youtubeId && typeof event === 'number') {\n                this.set('videoVolume', event);\n            } else {}\n            //         if (this.videoVolume / 100) {\n            //             this.set('volumeIcon', 'av:volume-up');\n            //         } else {\n            //             this.set('volumeIcon', 'av:volume-off');\n            //         }\n        }\n        readableDuration(value) {\n            // sec = Math.floor(seconds);\n            // min = Math.floor(sec / 60);\n            // min = min >= 10 ? min : '0' + min;\n            // sec = Math.floor(sec % 60);\n            // sec = sec >= 10 ? sec : '0' + sec;\n            // hh =  Math.floor(min / 60);\n            // return hh ? hh + ':' + min : min + ':' + sec;\n\n            var isNegative = false;\n            if (isNaN(value)) {\n                return value;\n            } else if (value < 0) {\n                isNegative = true;\n                value = Math.abs(value);\n            }\n            var days = Math.floor(value / 86400);\n            value %= 86400;\n            var hours = Math.floor(value / 3600);\n            value %= 3600;\n            var minutes = Math.floor(value / 60);\n            var seconds = (value % 60).toFixed(0);\n            if (seconds < 10) {\n                seconds = '0' + seconds;\n            }\n\n            var res = hours ? (hours + ':' + ('0' + minutes).slice(-2) + ':' + seconds) : (minutes + ':' + seconds);\n            if (days) {\n                res = days + '.' + res;\n            }\n            return (isNegative ? ('-' + res) : res);\n\n        }\n        play() {\n            return this.$.videoPlayer.play();\n        }\n        pause() {\n            if (this.youtubeId) {\n                this.$.yt.pause();\n            }\n            if (this.raw) {\n                return this.$.videoPlayer.pause();\n            }\n\n        }\n        togglePlayPause() {\n            //         console.log(this.$.yt.state);\n            if (this.youtubeId) {\n                //             console.log(this.$.yt.state);\n                switch (this.$.yt.state) {\n                    case -1:\n                        this.$.yt.play();\n                        break;\n                    case 0:\n                        //                 console.log('ended');\n                        this.$.yt.play();\n                        //switch icon to replay\n                        break;\n                    case 1:\n                        //                 console.log('playing');\n                        this.$.yt.pause();\n                        break;\n                    case 2:\n                        //                 console.log('paused');\n                        this.$.yt.play();\n                        break;\n                    case 3:\n                        //                 console.log('buffering');\n                        this.set('playPauseIcon', '');\n                        //disable while buffering\n                        break;\n                    case 5:\n                        //                 console.log('video cued');\n                        //video is ready\n                        break;\n                    default:\n                        console.log('no youtube state');\n                }\n            } else {\n                let video = this.$.videoPlayer;\n\n                if (video.paused || video.ended) {\n                    this.play();\n                } else {\n                    this.pause();\n                }\n            }\n        }\n        toggleMute(event) {\n            if (this.youtubeId) {\n                //console.log('toggleMute');\n                //this.set('volumeIcon', 'av:volume-up');\n                if (!this.muted) {\n                    this.$.yt.mute();\n                    this.set('volumeIcon', 'av:volume-off');\n                } else if (this.muted) {\n                    this.$.yt.unMute();\n                    this.set('volumeIcon', 'av:volume-up');\n                }\n            }\n            this.set('muted', !this.muted);\n        }\n        toggleFullScreen(elem) {\n            elem = this.$.container;\n            //elem = elem || document.documentElement;\n            if (!document.fullscreenElement && !document.mozFullScreenElement && !document.webkitFullscreenElement && !document.msFullscreenElement) {\n                if (elem.requestFullscreen) {\n                    elem.requestFullscreen();\n                } else if (elem.msRequestFullscreen) {\n                    elem.msRequestFullscreen();\n                } else if (elem.mozRequestFullScreen) {\n                    elem.mozRequestFullScreen();\n                } else if (elem.webkitRequestFullscreen) {\n                    elem.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n                }\n            } else {\n                if (document.exitFullscreen) {\n                    document.exitFullscreen();\n                } else if (document.msExitFullscreen) {\n                    document.msExitFullscreen();\n                } else if (document.mozCancelFullScreen) {\n                    document.mozCancelFullScreen();\n                } else if (document.webkitExitFullscreen) {\n                    document.webkitExitFullscreen();\n                }\n            }\n        }\n        _link(link) {\n            // console.log(link);\n            //console.log(link.match(/((http|https)\\:\\/\\/)?[a-zA-Z0-9\\.\\/\\?\\:@\\-_=#]+\\.([a-zA-Z0-9\\&\\.\\/\\?\\:@\\-_=#])*/));\n            if (link.match(/magnet:\\?xt/i)) {\n                //console.log(link);\n                this.reset();\n                this._magnetUrl(link);\n                return;\n            }\n            if (link.match(/^[a-f0-9]{40}$/ig)) {\n                //console.log(link);\n                this.reset();\n                this._magnetUrl(link);\n                return;\n            }\n            if (link.match(/^((?:https?:)?\\/\\/)?((?:www|m)\\.)?((?:youtube\\.com|youtu.be))(\\/(?:[\\w\\-]+\\?v=|embed\\/|v\\/)?)([\\w\\-]+)(\\S+)?$/)) {\n                this.reset();\n                this._youtubeUrl(link);\n                return;\n            }\n            // other routes are coming through ex. detail/ladies-outerwear\n            //this._rawLink(link);\n        }\n        _rawLink(link) {\n            if (!link.length)\n                return;\n            let media = {};\n            media.title = this._cleanText(link);\n            console.log(link);\n            this._fetchInfo(media);\n            this.set('src', link);\n        }\n        _youtubeState(event) {\n            // console.log(event.detail.data);\n            let state = event.detail.data;\n            switch (state) {\n                case -1:\n                    //             console.log('unstarted');\n                    this.set('playPauseIcon', 'av:play-arrow');\n                    this.set('paused', false);\n                    break;\n                case 0:\n                    //             console.log('ended');\n                    this.set('playPauseIcon', 'av:play-arrow');\n                    this.set('paused', false);\n                    //switch icon to replay\n                    break;\n                case 1:\n                    //             console.log('playing');\n                    this.set('playPauseIcon', 'av:pause');\n                    this.set('paused', false);\n\n                    break;\n                case 2:\n                    //             console.log('paused');\n                    this.set('playPauseIcon', 'av:play-arrow');\n                    this.set('paused', false);\n\n                    break;\n                case 3:\n                    //             console.log('buffering');\n                    this.set('playPauseIcon', '');\n                    this.set('paused', false);\n\n                    //disable while buffering\n                    break;\n                case 5:\n                    //             console.log('video cued');\n                    //video is ready\n                    break;\n                default:\n                    console.log('no youtube state');\n            }\n        }\n        ytVidId(url) {\n            let p = /^(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\n            console.log(p);\n            return (url.match(p)) ? RegExp.$1 : false;\n        }\n        _youtubeId(_youtubeId) {\n            this.reset();\n            // console.log(_youtubeId);\n            let url = 'https://www.googleapis.com/youtube/v3/videos?part=contentDetails,liveStreamingDetails,snippet&key=AIzaSyAMDWKG7qyQ9msJaaKb7vmvK-rNu3X_7-Q&id=' + _youtubeId;\n            var request = new XMLHttpRequest();\n            request.open('GET', url);\n            request.setRequestHeader('Accept', 'application/json');\n            let that = this;\n            request.onreadystatechange = function() {\n                    if (request.readyState === 4) {\n                        //console.log('Status:', this.status);\n                        //console.log('Headers:', this.getAllResponseHeaders());\n                        //console.log('Body:', JSON.parse(this.responseText));\n                        let item = JSON.parse(request.responseText);\n                        if (item.error) {\n                            //console.log(item);\n                            //this.set('error', item.error);\n                            this.set('failure', true);\n                            //this.set('youtubeId', _youtubeId);\n                            return;\n                        }\n                        //console.log(item.items[0]);\n                        if (item.pageInfo.totalResults === 1) {\n                            this.set('failure', false);\n                            this.set('youtubeId', _youtubeId);\n                            this.set('raw', false);\n\n                            let media = item.items[0].snippet;\n                            media.liveStreamingDetails = item.items[0].liveStreamingDetails || {};\n                            media.contentDetails = item.items[0].contentDetails || {};\n                            // console.log(media);\n                            this.set('item', media);\n                        }\n                    }\n                    that.set('loading', false);\n                }\n                .bind(this);\n            request.send();\n        }\n        _youtubeUrl(link) {\n            let _youtubeId = this.ytId(link);\n            let url = 'https://www.googleapis.com/youtube/v3/videos?part=contentDetails,liveStreamingDetails,snippet&key=AIzaSyAMDWKG7qyQ9msJaaKb7vmvK-rNu3X_7-Q&id=' + _youtubeId;\n            var request = new XMLHttpRequest();\n            request.open('GET', url);\n            request.setRequestHeader('Accept', 'application/json');\n            that = this;\n            request.onreadystatechange = function() {\n                    if (request.readyState === 4) {\n                        //console.log('Status:', this.status);\n                        //console.log('Headers:', this.getAllResponseHeaders());\n                        //console.log('Body:', JSON.parse(this.responseText));\n                        let item = JSON.parse(request.responseText);\n                        if (item.error) {\n                            //console.log(item);\n                            //this.set('error', item.error);\n                            this.set('failure', true);\n                            //this.set('youtubeId', _youtubeId);\n                            return;\n                        }\n                        //console.log(item.items[0]);\n                        if (item.pageInfo.totalResults === 1) {\n                            this.set('failure', false);\n                            this.set('youtubeId', _youtubeId);\n                            this.set('raw', false);\n                            console.log(this.raw);\n                            let media = item.items[0].snippet;\n                            media.liveStreamingDetails = item.items[0].liveStreamingDetails || {};\n                            media.contentDetails = item.items[0].contentDetails || {};\n                            this.set('item', media);\n                        }\n                    }\n                }\n                .bind(this);\n            request.send();\n        }\n        _magnetUrl(magnetURI) {\n            // console.log('raw link: ', magnetURI);\n\n            // console.log('conposed link', 'magnet:?xt=urn:btih:' + magnetURI + this.trackers());\n            // if (!window.WebTorrent) {\n            //     let scripts = [\n            //         '//cdn.jsdelivr.net/webtorrent/latest/webtorrent.min.js'\n            //     ];\n            //     for (var i = 0; i < scripts.length; i++) {\n            //         var _s = document.createElement('script');\n            //         _s.src = scripts[i];\n            //         _s.onload = (e) => {\n            //             // console.log('webtorrent');\n            //             this._magnetUrl(magnetURI);\n            //         };\n            //         document.body.appendChild(_s);\n            //     }\n            //     return;\n            // }\n\n            // if (!client) {\n            //     client = new WebTorrent();\n            // } else {\n            //     client.destroy((err) => {\n            //         console.error('ERROR: ' + err);\n            //     });\n            //\n            // }\n\n            client = new WebTorrent();\n\n\n            client.on('error', function(err) {\n                console.error('ERROR: ' + err.message);\n            });\n\n            client.add('magnet:?xt=urn:btih:' + magnetURI + this.trackers(), function(torrent) {\n                // Got torrent metadata!\n                // console.log('Client is downloading:', torrent.infoHash);\n                // console.log('files: ', torrent.files);\n                var file = torrent.files[0];\n\n                this._fetchInfo({\n                    title: file.name\n                });\n\n                if (file.name.match(/\\.m3u8/i)) {\n                    console.log(file.name);\n                    file.getBlobURL(function(err, url) {\n                        if (err)\n                            throw err;\n                        this._loadM3U8(url);\n                    }.bind(this));\n                    return;\n                }\n\n\n                if (file.name.match(/\\.m4v|\\.mp4|\\.ogv/i)) {\n                    // console.log(file);\n                    //this._loadMP4();\n                    // console.log(file.name);\n\n                    var itemStorage = localStorage.getItem(torrent.infoHash);\n                    if (itemStorage) {\n                        this.set(\"src\", itemStorage);\n                    } else {\n                        // Create XHR and FileReader objects\n                        var xhr = new XMLHttpRequest(),\n                            fileReader = new FileReader();\n\n                        // file.getBlob((err, blob) => {\n                        //     console.log(blob);\n                        // });\n\n\n                        // xhr.open(\"GET\", \"rhino.png\", true);\n                        // // Set the responseType to blob\n                        // xhr.responseType = \"blob\";\n                        //\n                        // xhr.addEventListener(\"load\", function() {\n                        //     if (xhr.status === 200) {\n                        //         // onload needed since Google Chrome doesn't support addEventListener for FileReader\n                        //         fileReader.onload = function(evt) {\n                        //             // Read out file contents as a Data URL\n                        //             var result = evt.target.result;\n                        //             // Set image src to Data URL\n                        //             rhino.setAttribute(\"src\", result);\n                        //             // Store Data URL in localStorage\n                        //             try {\n                        //                 localStorage.setItem(\"rhino\", result);\n                        //             } catch (e) {\n                        //                 console.log(\"Storage failed: \" + e);\n                        //             }\n                        //         };\n                        //         // Load blob as Data URL\n                        //\n                        //     }\n                        // }, false);\n                        // // Send XHR\n                        // xhr.send();\n                    }\n\n\n\n                    file.getBlobURL(function(err, url) {\n                        if (err)\n                            throw err;\n                        console.log(url);\n                        //this.set('src', url);\n                        //this._fetchInfo({\n                        //    'title': file.name,\n                        //    'mediaUrl': url,\n                        //    'size': this._bytesText(file.length)\n                        //});\n                    }.bind(this));\n\n                    file.renderTo(this.$.videoPlayer);\n                }\n\n\n                if (file.name.match(/\\.mp3|\\.ogg|\\.aac/i)) {\n                    // console.log(file.name);\n                    //this._loadMP4();\n                    // console.log(file.name);\n\n\n\n                    var itemStorage = localStorage.getItem(torrent.infoHash);\n                    if (itemStorage) {\n                        this.set(\"src\", itemStorage);\n                    } else {\n                        // Create XHR and FileReader objects\n                        let fileReader = new FileReader();\n                        file.getBlob((err, blob) => {\n                            console.log(blob);\n                            //localStorage.setItem(torrent.infoHash, blob);\n                        });\n                    }\n\n                    file.getBlobURL(function(err, url) {\n                        if (err)\n                            throw err;\n                        // console.log(url);\n                        this.set('src', url);\n                        //this._fetchInfo({\n                        //    'title': file.name,\n                        //    'mediaUrl': url,\n                        //    'size': this._bytesText(file.length)\n                        //});\n                    }.bind(this));\n\n                    //file.renderTo(this.$.audioPlayer);\n                }\n\n\n                torrent.on('download', function(bytes) {\n                    //console.log('progress: ' + torrent.progress);\n                    this.set('progress', torrent.progress * 100);\n                }.bind(this));\n\n                torrent.on('done', function(e) {}.bind(this));\n\n                torrent.on('wire', function(wire, addr) {\n                    console.log('connected to peer with address ' + addr);\n                });\n\n            }.bind(this));\n        }\n\n\n\n\n        _loadM3U8(url) {\n            //url = encodeURI(url);\n            console.log(url);\n            // url = 'http://video-edge-83437c.ord02.hls.ttvnw.net/hls-8269f0/kinggothalion_22086966128_477208286/high/index-live.m3u8?token=id=4717244374468376402,bid=22086966128,exp=1467307314,node=video-edge-83437c-1.ord02.hls.justin.tv,nname=video-edge-83437c.ord02,fmt=high&sig=3d2e7ed0c3d490db92607d83041e51daff7a9a3f'\n\n\n            // ++ Fetch m3u8 with ajax\n            // ++\n            // var request = new XMLHttpRequest();\n            // request.open('GET', url);\n            //request.setRequestHeader('Accept', 'application/json');\n            //request.setRequestHeader('trakt-api-key', '2a3022a90d1e592cabe6590cb30c0cc53003ac35de76dd740365e717a134968b');\n            //request.setRequestHeader('trakt-api-version', 2);\n            // let that = this;\n            // request.onreadystatechange = function() {\n            //     if (this.readyState === 4) {\n            //         //console.log('Status:', this.status);\n            //         //console.log('Headers:', this.getAllResponseHeaders());\n            //         //console.log('Body:', JSON.parse(this.responseText));\n            //         let item = this.responseText;\n            //         if (!item.length) {\n            //             that.set('item', _media);\n            //             that.set('loading', false);\n            //             return;\n            //         }\n            //\n            //         //console.log(item);\n            //         that.set('loading', false);\n            //     }\n            // }\n            // request.send();\n\n\n\n            // ++ Google Cast Media Player Library\n            // ++\n            // var mediaElement = this.$.videoPlayer;\n            // var host = new cast.player.api.Host({\n            //     'mediaElement': mediaElement,\n            //     'url': url\n            // });\n            // host.updateSegmentRequestInfo = function(requestInfo) {\n            //     // example of setting CORS withCredentials\n            //     requestInfo.withCredentials = true;\n            //     // example of setting headers\n            //     requestInfo.headers = {};\n            //     requestInfo.headers['content-type'] = 'text/xml;charset=utf-8';\n            // };\n            //\n            // host.onError = function(errorCode) {\n            //     console.log(\"Fatal Error - \" + errorCode);\n            //     if (window.player) {\n            //         window.player.unload();\n            //         window.player = null;\n            //     }\n            // };\n            //\n            //\n            // // Create a Player\n            // window.player = new cast.player.api.Player(host);\n            //\n            // let protocol = cast.player.api.CreateHlsStreamingProtocol(host);\n            //\n            // let ext = url.substring(url.lastIndexOf('.'), url.length);\n            // let initStart = 0;\n            // let autoplay = true;\n            //\n            // mediaElement.autoplay = autoplay;\n            //\n            // window.player.load(protocol, initStart);\n\n\n            //window.castReceiverManager = cast.receiver.CastReceiverManager.getInstance();\n            //castReceiverManager.start();\n\n\n            if (Hls.isSupported()) {\n\n                /*Add Request Listeners*/\n                // if (XMLHttpRequest) {\n                //     (function(send) {\n                //         XMLHttpRequest.prototype.send = function(data) {\n                //             //this.withCredentials = true;\n                //             console.log(this);\n                //             this.setRequestHeader('Access-Control-Allow-Origin', '*');\n                //             this.setRequestHeader('Access-Control-Expose-Headers', '');\n                //             this.setRequestHeader('Access-Control-Allow-Methods', 'GET, PUT, POST, DELETE, HEAD, OPTIONS')\n                //             this.setRequestHeader('Access-Control-Max-Age', '3600')\n                //             send.call(this, data);\n                //         };\n                //     })(XMLHttpRequest.prototype.send);\n                // }\n\n\n                var video = this.$.videoPlayer;\n                var hls = new Hls({\n                    debug: true,\n                    enableWorker: true\n                });\n                hls.loadSource(url);\n                hls.attachMedia(video);\n                hls.on(Hls.Events.MANIFEST_PARSED, function() {\n                    video.play();\n                });\n            }\n\n\n\n        }\n\n\n\n        _fetchInfo(media) {\n            //let apikey = \"33dce8e62b60a6fc148ed731ff825268\";\n            //let type = media.type || 'movie';\n            //media.title = 'South.Park.season18.episode09.REHASH.UNCENSORED.720p.WEB-DL.x264.mp4';\n            //media.title = this._cleanText(media.title);\n\n            // console.log('dirty title: ', media.title);\n            // console.log('cleaned title: ', cleanupTitle(media.title));\n            let _media = cleanupTitle(media.title);\n            //console.log(_media);\n            //let url = 'https://api.themoviedb.org/3/search/' + type + '?api_key=' + apikey + '&query=' + 'south park';\n            let url = 'https://api-v2launch.trakt.tv/search?query=' + _media.title;\n\n            url = encodeURI(url);\n            // console.log(url);\n            var request = new XMLHttpRequest();\n            request.open('GET', url);\n            request.setRequestHeader('Accept', 'application/json');\n            request.setRequestHeader('trakt-api-key', '2a3022a90d1e592cabe6590cb30c0cc53003ac35de76dd740365e717a134968b');\n            request.setRequestHeader('trakt-api-version', 2);\n            let that = this;\n            request.onreadystatechange = function() {\n                if (this.readyState === 4) {\n                    // console.log('Fetch Info Status:', this.status);\n                    //console.log('Headers:', this.getAllResponseHeaders());\n                    // console.log('Fetch Info Response:', JSON.parse(this.responseText));\n                    //item = JSON.parse(this.responseText).results[0];\n                    let item = JSON.parse(this.responseText);\n                    if (!item.length) {\n                        //media.backdrop_path = 'http://www.much.com/wp-content/uploads/2015/05/featured-south-park1.jpg';\n                        // console.log('nothing returned from title search, so... yea!');\n                        that.set('item', _media);\n                        that.set('loading', false);\n                        return;\n                    }\n                    //item.description = item.overview;\n                    //item.poster_path = 'http://image.tmdb.org/t/p/w500' + item.poster_path;\n                    //item.backdrop_path = 'http://image.tmdb.org/t/p/w500' + item.backdrop_path;\n                    //console.log(item[0]);\n                    //'http://api.themoviedb.org/3/movie/{imdbid}/images?api_key='\n                    let info = {\n                        meta: {}\n                    };\n\n\n                    if (item[0].movie) {\n                        info.description = item[0].movie.overview;\n                        info.title = item[0].movie.title;\n                        //info.meta.header = item[0].movie.title;\n                        info.meta.text = item[0].movie.year;\n                        info.poster_path = item[0].movie.images.fanart.full;\n                        info.backdrop_path = item[0].movie.images.poster.full;\n                    }\n\n                    if (item[0].episode) {\n                        info.description = item[0].episode.overview;\n                        info.title = item[0].episode.title;\n                        info.meta.header = item[0].show.title;\n                        info.meta.text = 'Season: ' + item[0].episode.season + ' Episode: ' + item[0].episode.number;\n                        info.poster_path = item[0].episode.images.screenshot.full;\n                        info.backdrop_path = item[0].show.images.poster.full;\n                    }\n\n                    if (item.length > 1) {\n                        for (var i = 0; i < item.length; i++) {\n                            if (true) {\n                                //console.log(item[i].type === _media.type);\n                                if (item[i].type === _media.type) {\n                                    // console.log('Closes match is #', i);\n                                    // console.log('Closes match info', item[i]);\n\n                                    if (_media.type === 'movie') {\n                                        info.description = item[i].movie.overview;\n                                        info.title = item[i].movie.title;\n                                        //info.meta.header = item[0].movie.title;\n                                        info.meta.text = item[i].movie.year;\n                                        info.poster_path = item[i].movie.images.fanart.full;\n                                        info.backdrop_path = item[i].movie.images.poster.full;\n                                    }\n\n                                    if (_media.type === 'episode') {\n                                        info.description = item[i].episode.overview;\n                                        info.title = item[i].episode.title;\n                                        info.meta.header = item[i].show.title;\n                                        info.meta.text = 'Season: ' + item[0].episode.season + ' Episode: ' + item[0].episode.number;\n                                        info.poster_path = item[i].episode.images.screenshot.full;\n                                        info.backdrop_path = item[i].show.images.poster.full;\n                                    }\n\n                                    break;\n\n                                }\n                            }\n                        }\n\n                    }\n\n\n                    that.set('item', info);\n                    that.set('loading', false);\n                }\n            }\n            request.send();\n        }\n        _cleanText(text) {\n            let parts = text.split(\"/\");\n            let rawName = parts[parts.length - 1].split('?')[0];\n            return rawName.replace(/[^a-zA-Z0-9]/g, ' ');\n        }\n        _bytesText(bytes) {\n            if (bytes < 1024)\n                return bytes + \" Bytes\";\n            else if (bytes < 1048576)\n                return (bytes / 1024).toFixed(2) + \" KB\";\n            else if (bytes < 1073741824)\n                return (bytes / 1048576).toFixed(2) + \" MB\";\n            else\n                return (bytes / 1073741824).toFixed(2) + \" GB\";\n        }\n\n\n        trackers() {\n            let trackers = [\n                'tr=wss%3A%2F%2Ftracker.webtorrent.io',\n                'tr=udp%3A%2F%2Fglotorrents.pw%3A6969%2Fannounce',\n                'tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80%2Fannounce',\n                'tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337%2Fannounce',\n                'tr=wss%3A%2F%2Ftracker.btorrent.xyz',\n                //'tr=wss%3A%2F%2Ftracker.fastcast.nz',\n                'tr=wss%3A%2F%2Ftracker.openwebtorrent.com'\n            ]\n\n            return '&' + trackers.join('&');\n        }\n\n\n        onMouseEntered(e) {\n            this.entered = true;\n        }\n\n        onMouseLeave(e) {\n            this.entered = false;\n        }\n\n\n        _enteredChange() {\n            //console.log(this.entered);\n            if (!this.entered) {\n                //this.async(this.hideControls, null, 1000);\n            } else {\n\n\n\n            }\n\n\n\n        }\n\n        OnVideoPlay() {\n            // let videoPlayer = this.$.videoPlayer;\n            // let canvas = this.$.videoPlayerCanvas;\n            // let cw = Math.floor(canvas.clientWidth / 100);\n            // let ch = Math.floor(canvas.clientHeight / 100);\n            // let context = canvas.getContext('2d');\n            // // videoPlayer.hidden = true;\n            // this.canvasDraw(videoPlayer, context, cw, ch);\n        }\n\n        canvasDraw(videoPlayer, context, w, h) {\n            if (videoPlayer.paused || videoPlayer.ended) return false;\n            context.drawImage(videoPlayer, 0, 0, w, h);\n            requestAnimationFrame(this.canvasDraw(context, w, h));\n        }\n\n\n        reset() {\n            this.set('item', {});\n            this.set('currentTick', this.readableDuration(0));\n            this.set('durationTick', this.readableDuration(0));\n            this.set('duration', 0);\n            this.set('videoTimeline', 0);\n            this.set('src', '');\n            this.set('loading', true);\n        }\n\n    }\n\n    // Register the element using Polymer's constructor.\n    Polymer(dlxVideo);\n})();\n"]}